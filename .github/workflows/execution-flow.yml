name: Website Deployment
on:
  push:
    branches:
      - master
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test code
        id: test
        run: npm run test
      - name: Upload test report
        if: failure() && steps.test.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    uses: ./.github/workflows/reusable.yml
  report:
    needs: [lint,deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: output information
        run : |
         echo "something went wrong"
         echo "${{github}}"
  # matrixStep:
  #   strategy:
  #    matrix:
  #       node-version: [16,18,20]
  #       os: [ubuntu-latest,windows-latest]
  #   runs-on: ${{matrix.os}}
  #   steps:
  #     - name: Retrieve the code from its repository
  #       uses: actions/checkout@v4
  #     - name: Install nodejs 
  #       uses: actions/setup-node
  #       with:
  #         node-version: ${{matrix.node-version}}
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Build the Project
  #       run: npm run build  

